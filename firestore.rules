rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ---------- Helpers ----------
    function isSignedIn() {
      return request.auth != null;
    }

    // Set a custom claim { admin: true } on admin users via Admin SDK
    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    // Check ownership based on a submittedBy field
    function isOwner() {
      return isSignedIn() && resource.data.submittedBy == request.auth.uid;
    }

    // ---------- BLOG (public read, admin write) ----------
    match /blog/{postId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();

      // (Optional) light shape checks on write
      allow create: if isAdmin() &&
        request.resource.data.keys().hasAny(['title', 'slug', 'content', 'published', 'publishedAt']);
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // ---------- EVENTS (public read, admin write) ----------
    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();

      // Event registrations (choose one of the two create policies below)
      match /registrations/{regId} {
        // Option A (recommended): require sign-in (anonymous is fine)
        allow create: if isSignedIn();

        // Option B (truly public submit): uncomment next line and comment out Option A
        // allow create: if true;

        // Keep PII private
        allow read: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
        allow update, delete: if isAdmin();
      }
    }

    // ---------- FORMS ----------
    // Store form definitions (optional). Public can read to render a form, admins manage them.
    match /forms/{formId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();

      // Submissions: inbound PII. Keep private by default.
      match /submissions/{submissionId} {
        // Option A (recommended): require sign-in (anonymous allowed)
        allow create: if isSignedIn();

        // Option B (public submit): uncomment if you want to accept without any auth
        // allow create: if true;

        // Read back only by admins or the owner (if you want submitters to see their own)
        allow read: if isAdmin() || (isSignedIn() && resource.data.submittedBy == request.auth.uid);

        // No edits or deletes by end users; admins only
        allow update, delete: if isAdmin();
      }
    }

    // ---------- CONTACTS (public "contact us" inbox) ----------
    match /contacts/{messageId} {
      // Usually you want this open to submit
      allow create: if true; // or require isSignedIn() if you prefer

      // Keep inbox private
      allow read, update, delete: if isAdmin();
    }

    // ---------- Catch-all deny (explicit) ----------
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
